
package com.remedy.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 * HelpDesk_Submit_Service Create  
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HPD_IncidentInterface_Create_WS1Service", targetNamespace = "urn:HPD_IncidentInterface_Create_WS1", wsdlLocation = "http://172.17.50.153:8082/arsys/WSDL/public/limnwrmdyarf04/HPD_IncidentInterface_Create_WS1")
public class HPDIncidentInterfaceCreateWS1Service
    extends Service
{

    private final static URL HPDINCIDENTINTERFACECREATEWS1SERVICE_WSDL_LOCATION;
    private final static WebServiceException HPDINCIDENTINTERFACECREATEWS1SERVICE_EXCEPTION;
    private final static QName HPDINCIDENTINTERFACECREATEWS1SERVICE_QNAME = new QName("urn:HPD_IncidentInterface_Create_WS1", "HPD_IncidentInterface_Create_WS1Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://172.17.50.153:8082/arsys/WSDL/public/limnwrmdyarf04/HPD_IncidentInterface_Create_WS1");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        HPDINCIDENTINTERFACECREATEWS1SERVICE_WSDL_LOCATION = url;
        HPDINCIDENTINTERFACECREATEWS1SERVICE_EXCEPTION = e;
    }

    public HPDIncidentInterfaceCreateWS1Service() {
        super(__getWsdlLocation(), HPDINCIDENTINTERFACECREATEWS1SERVICE_QNAME);
    }

    public HPDIncidentInterfaceCreateWS1Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), HPDINCIDENTINTERFACECREATEWS1SERVICE_QNAME, features);
    }

    public HPDIncidentInterfaceCreateWS1Service(URL wsdlLocation) {
        super(wsdlLocation, HPDINCIDENTINTERFACECREATEWS1SERVICE_QNAME);
    }

    public HPDIncidentInterfaceCreateWS1Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, HPDINCIDENTINTERFACECREATEWS1SERVICE_QNAME, features);
    }

    public HPDIncidentInterfaceCreateWS1Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HPDIncidentInterfaceCreateWS1Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HPDIncidentInterfaceCreateWSPortTypePortType
     */
    @WebEndpoint(name = "HPD_IncidentInterface_Create_WSPortTypeSoap")
    public HPDIncidentInterfaceCreateWSPortTypePortType getHPDIncidentInterfaceCreateWSPortTypeSoap() {
        return super.getPort(new QName("urn:HPD_IncidentInterface_Create_WS1", "HPD_IncidentInterface_Create_WSPortTypeSoap"), HPDIncidentInterfaceCreateWSPortTypePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HPDIncidentInterfaceCreateWSPortTypePortType
     */
    @WebEndpoint(name = "HPD_IncidentInterface_Create_WSPortTypeSoap")
    public HPDIncidentInterfaceCreateWSPortTypePortType getHPDIncidentInterfaceCreateWSPortTypeSoap(WebServiceFeature... features) {
        return super.getPort(new QName("urn:HPD_IncidentInterface_Create_WS1", "HPD_IncidentInterface_Create_WSPortTypeSoap"), HPDIncidentInterfaceCreateWSPortTypePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (HPDINCIDENTINTERFACECREATEWS1SERVICE_EXCEPTION!= null) {
            throw HPDINCIDENTINTERFACECREATEWS1SERVICE_EXCEPTION;
        }
        return HPDINCIDENTINTERFACECREATEWS1SERVICE_WSDL_LOCATION;
    }

}
